# Python to Linux Web App on Azure


trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: 'c86d2b13-ba15-4573-a0ef-21f591164ac6' 

  # Web app name
  webAppName: 'harshatoyrobot' 

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  TAG: '$(Build.BuildId)'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory) 


stages:
- stage: test_app_logic
  displayName: Test app logic
  jobs:
  - job: BuildJob  
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.11
      displayName: 'Use Python 3.11'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    - script: |
       pip install pytest pytest-azurepipelines
       pytest
      displayName: 'pytest'

- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'ACR'
        repository: toyrobotapp
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(TAG)'

- stage: Build-dev-env
  displayName: Build
  jobs:
  - job: Build-infra-Job
    pool:
      vmImage: $(vmImageName)
    steps:


    - task: AzureCLI@2
      displayName: 'Azure CLI'
      inputs:
        azureSubscription: '$(SUBSCRIPTION_NAME)' Azure subscription 1
        addSpnToEnvironment: true
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$(az account show --query="id" -o tsv)"
          echo "##vso[task.setvariable variable=ARM_CLIENT_ID]${servicePrincipalId}"
          echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET]${servicePrincipalKey}"
          echo "##vso[task.setvariable variable=ARM_TENANT_ID]${tenantId}"

    - script: pip install ansible
      displayName: 'Install Ansible'

    - script: pip install -r https://raw.githubusercontent.com/ansible-collections/azure/dev/requirements-azure.txt
      displayName: 'Install Azure modules needed'

    - script: ansible-galaxy collection install azure.azcollection
      displayName: 'Install Ansible Azure Collection'
  
    - script: ansible-playbook -i inv create-app.yml
      displayName: 'Run Ansible Playbook'
      env:
        AZURE_CLIENT_ID: $(ARM_CLIENT_ID) 
        AZURE_SECRET: $(ARM_CLIENT_SECRET) 
        AZURE_TENANT: $(ARM_TENANT_ID)
        AZURE_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID) 

- stage: DeployDev
  jobs: 
  - job: DeployDev
    steps:
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure subscription 1 (e10e8766-0a2a-4407-80f0-3e99381ba293)'
        appType: 'webAppContainer'
        WebAppName: 'harshatoyrobot' 
        DockerNamespace: 'harshatoyrobot.azurecr.io'
        DockerRepository: 'toyrobotapp'
        DockerImageTag: '$(TAG)'

- stage: TestAPPHealth
  jobs: 
  - job: TestAppHealth
    steps:
    - task: Delay@1
      inputs:
        delayForMinutes: '5'
    - task: InvokeRESTAPI@1
      inputs:
        connectionType: 'connectedServiceNameARM'
        azureServiceConnection: 'Azure subscription 1 (e10e8766-0a2a-4407-80f0-3e99381ba293)'
        method: 'POST'
        urlSuffix: 'https://$(webappname).azurewebsites.net/health'
        waitForCompletion: 'false'
        successCriteria: 'ok'